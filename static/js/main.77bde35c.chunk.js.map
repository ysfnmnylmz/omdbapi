{"version":3,"sources":["assets/img/no-poster.jpg","components/common/PrimaryModal.js","components/Movie.js","components/FavNavigation.js","components/common/FavButton.js","lib/UtilityFunctions.js","lib/api.js","store/actions/handler.js","lib/helpers.js","App/index.js","store/actions/getmovie.js","store/actions/ActionTypes/index.js","store/reducers/getMovieReducer.js","store/reducers/index.js","store/index.js","serviceWorker.js","index.js"],"names":["module","exports","PrimaryModal","props","movie","show","setShow","addFav","useState","note","setNote","handleClose","Modal","onHide","Header","closeButton","Title","Body","style","width","onChange","e","target","value","placeholder","Footer","Button","onClick","variant","document","getElementsByClassName","classList","add","setTimeout","remove","saveFav","connect","state","getMovieReducer","searchList","Container","Row","Col","xl","md","sm","xs","className","src","Poster","noPoster","alt","href","rel","color","Released","Runtime","Genre","Director","Actors","Country","size","data","reverse","map","item","i","key","String","renderSearchList","FavNavigation","favList","position","top","right","cursor","length","userNote","FavButton","title","res","console","log","axiosInstance","axios","create","baseURL","timeout","defaults","headers","common","interceptors","request","use","config","UtilityFunctions","params","err","Promise","reject","response","error","fetchingFailure","type","payload","asyncLocalStorage","resolve","then","localStorage","setItem","getItem","getMovie","dispatch","a","api","get","Response","keywords","setKeywords","storage","setStorage","setSearchlist","setFavlist","getStorage","useEffect","split","preventDefault","movieData","overflowX","onSubmit","getMovieError","INITIAL_STATE","combineReducers","action","Error","devToolsExtension","window","__REDUX_DEVTOOLS_EXTENSION__","middleWares","ReduxThunk","enhancerList","applyMiddleware","push","composedEnhancer","compose","store","createStore","reducers","Boolean","location","hostname","match","app","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.77bde35c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/no-poster.990a45c6.jpg\";","import React, { useState } from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\n\r\nfunction PrimaryModal(props) {\r\n    const { movie, show, setShow, addFav } = props;\r\n    const [note, setNote] = useState('');\r\n    const handleChange = (e) => {\r\n        setNote(e.target.value);\r\n    }\r\n    const handleClose = () => setShow(false);\r\n\r\n    const saveFav = (e, movie, note) => {\r\n        document.getElementsByClassName('added-fav')[0].classList.add('active');\r\n        addFav(e, movie, note);\r\n        handleClose();\r\n        setTimeout(function(){ document.getElementsByClassName('added-fav')[0].classList.remove('active'); }, 2000);\r\n    }\r\n    return (\r\n        <Modal show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Would you like to write a note?</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <input style={{width:'100%'}} onChange={handleChange} placeholder={'Your Note...'} />\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={handleClose} variant=\"secondary\">Close</Button>\r\n                <Button onClick={(e) => saveFav(e, movie, note)} variant=\"primary\">Add to Favorite</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n};\r\n\r\nexport default PrimaryModal;\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PrimaryModal from './common/PrimaryModal';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport noPoster from '../assets/img/no-poster.jpg';\r\nimport { RiHeartAddLine } from 'react-icons/ri';\r\n\r\n\r\nfunction Movie(props) {\r\n    const [show, setShow] = useState(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const renderSearchList = (data) => {\r\n        if (data) {\r\n            return (data.reverse().map((item, i) => item !=='' && <span key={String(i)}>{`${item},`}</span>))\r\n        }\r\n    }\r\n\r\n\r\n    const { movie, addFav, searchList } = props;\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col xl={4} md={4} sm={6} xs={12}><img className={'img-fluid'} src={movie.Poster !== 'N/A' ? movie.Poster : noPoster} alt={movie.Title} /></Col>\r\n                <Col xl={4} md={4} sm={6} xs={12} className={'movie-info'}>\r\n                    <div><p>Name:</p><a href={`https://www.google.com.tr/search?tbm=vid&hl=tr&source=hp&biw=&bih=&q=${movie.Title}`} rel={\"noopener noreferrer\"} target={'_blank'} style={{ color: 'green' }}>{movie.Title}</a></div>\r\n                    <div><p>Released:</p><span>{movie.Released}</span></div>\r\n                    <div><p>Runtime:</p><span>{movie.Runtime}</span></div>\r\n                    <div><p>Genre:</p><span>{movie.Genre}</span></div>\r\n                    <div><p>Director:</p><span>{movie.Director}</span></div>\r\n                    <div><p>Actors:</p><span>{movie.Actors}</span></div>\r\n                    <div><p>Country:</p><span>{movie.Country}</span></div>\r\n                    <div><p>Add Your Favorites:</p><a onClick={handleShow} href={'#!'}><RiHeartAddLine size={'22'} color={'tomato'} /></a></div>\r\n                </Col>\r\n                <Col xl={4} md={4} sm={6} xs={12} className={'search-list'}>\r\n                    <p>Last search keywords:</p>\r\n                    <div>{renderSearchList(searchList)}</div>\r\n                </Col>\r\n                <PrimaryModal show={show} setShow={setShow} addFav={addFav} movie={movie} />\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    getMovieReducer: state.getMovieReducer\r\n});\r\nexport default connect(mapStateToProps, null)(Movie);\r\n","import React from 'react';\r\nimport { TiTimes } from 'react-icons/ti';\r\n\r\nfunction FavNavigation(props) {\r\n    const onClick = () => {\r\n        document.getElementsByClassName('fav-navigation')[0].classList.remove('active');\r\n    }\r\n    const { favList } = props;\r\n    return (\r\n        <div className={'fav-navigation'}>\r\n            <TiTimes onClick={onClick} style={{ position: 'absolute', top: 20, right: 20, cursor: 'pointer' }} size={40} />\r\n            {favList.length > 0 ? favList.map((item, i) =>\r\n                <div key={String(i)}>\r\n                    <p>{item.movie.Title}</p>\r\n                    {item.userNote&& (<p>Note: {item.userNote}</p>)}\r\n                </div>\r\n            ): (<p>You have not added any movies to your favorites.</p>)}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default FavNavigation;\r\n","import React from 'react';\r\nimport { TiHeart,TiPlus } from 'react-icons/ti';\r\n\r\nfunction FavButton(props) {\r\n    const onClick = () => {\r\n        document.getElementsByClassName('fav-navigation')[0].classList.add('active');\r\n    }\r\n    return (\r\n        <button className={'fav-collapse-btn'} onClick={onClick}>\r\n            <TiHeart size={'30'} color={'tomato'} />\r\n            <p className={'added-fav'}><TiPlus color={'green'} size={'25'}/></p>\r\n        </button>\r\n    )\r\n};\r\n\r\nexport default FavButton;\r\n","import React from 'react';\r\n\r\nconst errorRender = (data) => {\r\n  const results = [];\r\n  for (const [key, value] of Object.entries(data)) {\r\n    results.push(`${key}: ${value}`);\r\n  }\r\n  return results.map((item, index) => (\r\n    <p key={`error_${index}`}>\r\n      {item}\r\n    </p>\r\n  ));\r\n};\r\n\r\nconst consoleFunc = (title, color, res) => {\r\n  console.log(\r\n    `%c ${title} - - ► `,\r\n    `background: #333333;\r\n         border: 1px solid ${color};\r\n         color: ${color};\r\n         font-weight: bold;\r\n         padding: 4px;\r\n         text-transform: capitalize;\r\n         `,\r\n    res,\r\n  );\r\n};\r\n\r\nexport default {\r\n  errorRender,\r\n  consoleFunc,\r\n};\r\n","import axios from 'axios';\r\nimport UtilityFunctions from './UtilityFunctions';\r\n\r\nconst BASE_URL = 'https://www.omdbapi.com/';\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: BASE_URL,\r\n  timeout: 30000,\r\n});\r\n\r\n\r\naxiosInstance.defaults.headers.common['Content-Type'] = 'application/json';\r\n\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    UtilityFunctions.consoleFunc('REQUEST', '#FFAA00', config);\r\n    config.params = {'apikey': '676f0853'}\r\n    return config;\r\n  },\r\n  (err) => Promise.reject(err),\r\n);\r\n\r\naxiosInstance.interceptors.response.use(\r\n  (response) => {\r\n    UtilityFunctions.consoleFunc('RESPONSE', '#59FF00 ', response);\r\n    return response;\r\n  },\r\n  (error) => {\r\n    UtilityFunctions.consoleFunc(\r\n      'RESPONSE_ERROR',\r\n      '#E50808',\r\n      error.response ? error.response : error,\r\n    );\r\n    return Promise.reject(error);\r\n  },\r\n);\r\n\r\nexport default axiosInstance;","export const fetchingRequest = type => ({type});\r\nexport const fetchingRequestWithParams = (type, payload) => ({type, payload});\r\nexport const fetchingSuccess = (type, json) => ({type, payload: json});\r\nexport const fetchingFailure = (type, error) => ({type, payload: error});\r\n","export const asyncLocalStorage = {\r\n    setItem: function (key, value) {\r\n        return Promise.resolve().then(function () {\r\n            localStorage.setItem(key, value);\r\n        });\r\n    },\r\n    getItem: function (key) {\r\n        return Promise.resolve().then(function () {\r\n            return localStorage.getItem(key);\r\n        });\r\n    },\r\n    removeItem: function (key) {\r\n        return Promise.resolve().then(function () {\r\n            return localStorage.removeItem(key);\r\n        });\r\n    },\r\n    clear: function () {\r\n        return Promise.resolve().then(function () {\r\n            return localStorage.clear();\r\n        });\r\n    }\r\n};\r\n\r\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Movie from '../components/Movie';\nimport FavNavigation from '../components/FavNavigation';\nimport FavButton from '../components/common/FavButton';\nimport { getMovie } from '../store/actions/getmovie';\nimport { asyncLocalStorage } from '../lib/helpers';\nimport { BsSearch } from 'react-icons/bs';\nimport '../assets/main.scss';\n\n\nfunction App(props) {\n  const [keywords, setKeywords] = useState('');\n  const [storage, setStorage] = useState('');\n  const [searchList, setSearchlist] = useState([])\n  const [favList, setFavlist] = useState([])\n  async function getStorage() {\n    setStorage(await asyncLocalStorage.getItem('searchTypes'))\n  }\n  useEffect(() => {\n    getStorage();\n    if (storage) {\n      setSearchlist(storage.split(','))\n    }\n  }, [storage])\n\n\n  const onChange = e => {\n    setKeywords(e.target.value)\n  };\n\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    props.getMovie(keywords);\n    asyncLocalStorage.setItem('searchTypes', keywords)\n    getStorage();\n    document.getElementsByClassName('search-form')[0].classList.add('active');\n  };\n  const addFav = (e, data, note) => {\n    e.preventDefault()\n    const movieData = {\n      movie: data,\n      userNote: note\n    }\n    setFavlist([...favList, movieData])\n  }\n\n  const renderData = (data) => {\n    if (data.movie && data.movie.Response && data.movie.Response === 'True') {\n      return (<Movie searchList={searchList} movie={data.movie} addFav={addFav} />)\n    } else if (data.getMovieError) {\n      return (<p className={'container'} style={{ color: 'red' }}>{`${data.getMovieError}`}</p>)\n    }\n  }\n  const { getMovieReducer } = props;\n  return (\n    <div className=\"movie-search-app\" style={{position:'relative', overflowX:'hidden'}}>\n      <div className={'search-form container'} >\n        <form onSubmit={onSubmit}>\n          <input onChange={onChange} placeholder={'Search...'} />\n          <button className={'search-form_btn'} type={'submit'}><BsSearch size={'22'} /></button>\n        </form>\n        <small>Movie Search App by omdbapi.com</small>\n      </div>\n      {getMovieReducer && renderData(getMovieReducer)}\n      <FavNavigation favList={favList}/>\n      <FavButton/>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  getMovieReducer: state.getMovieReducer\n});\nexport default connect(mapStateToProps, { getMovie })(App);\n","import {\r\n  GET_MOVIE,\r\n  GET_MOVIE_FAIL\r\n} from \"./ActionTypes\";\r\nimport api from \"../../lib/api\";\r\nimport { fetchingFailure, fetchingSuccess } from './handler';\r\nimport { asyncLocalStorage } from '../../lib/helpers';\r\n\r\nexport const getMovie = (title) => async dispatch => {\r\n  try {\r\n    const localStorage = await asyncLocalStorage.getItem('searchTypes');\r\n    if (localStorage.length === 0) {\r\n      await asyncLocalStorage.setItem('searchTypes', title);\r\n    } else {\r\n      await asyncLocalStorage.setItem('searchTypes', localStorage + ',' + title);\r\n    }\r\n    const response = await api.get(`?t=${title}`);\r\n    const payload = await response.data;\r\n    if(payload.Response === 'True'){\r\n      dispatch(fetchingSuccess(GET_MOVIE, payload));\r\n    }else{\r\n      dispatch(fetchingFailure(GET_MOVIE_FAIL, payload));\r\n    }\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n};\r\n","export const GET_MOVIE = 'GET_MOVIE';\r\nexport const GET_MOVIE_FAIL = 'GET_MOVIE_FAIL';","import { GET_MOVIE, GET_MOVIE_FAIL } from \"../actions/ActionTypes\";\r\n\r\nconst INITIAL_STATE = {\r\n  getMovieError: null,\r\n  movie: null\r\n};\r\nexport default (state = INITIAL_STATE, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n  case GET_MOVIE:\r\n    return {\r\n      ...state,\r\n      getMovieError: null,\r\n      movie: payload\r\n    };\r\n  case GET_MOVIE_FAIL:\r\n    return {\r\n      ...state,\r\n      getMovieError: payload.Error,\r\n      movie: null\r\n    };\r\n  default:\r\n    return state;\r\n  }\r\n};\r\n","import {combineReducers} from 'redux';\r\nimport getMovieReducer from './getMovieReducer';\r\n\r\n\r\nexport default combineReducers({\r\n    getMovieReducer\r\n});\r\n\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport ReduxThunk from 'redux-thunk';\r\nimport reducers from './reducers';\r\n\r\nconst devToolsExtension = window && window.__REDUX_DEVTOOLS_EXTENSION__;\r\n\r\nconst middleWares = [ReduxThunk];\r\n\r\nconst enhancerList = [applyMiddleware(...middleWares)];\r\n\r\nif (typeof devToolsExtension === 'function') {\r\n  enhancerList.push(devToolsExtension());\r\n}\r\n\r\nconst composedEnhancer = compose(...enhancerList);\r\n\r\n\r\nconst store = createStore(reducers, {}, composedEnhancer);\r\n\r\nexport default store;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\n\nimport * as serviceWorker from './serviceWorker';\n\n\nconst app = (\n  <Provider store={store}>\n      <App />\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}